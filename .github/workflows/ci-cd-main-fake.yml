# .github/workflows/ci-cd-main-fake.yml
name: CI (main-fake)

on:
  push:
    branches: [main-fake]
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-main-fake-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: clean-service-main
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:main-fake
            ${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1

  deploy-staging:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script_stop: true
          command_timeout: 20m
          script: |
            set -euo pipefail
            export PATH=/usr/bin:/usr/local/bin:$PATH
            IMAGE="${{ secrets.DOCKERHUB_USERNAME }}/clean-service-main:${{ github.sha }}"
            NAME="clean-service-fake"
            PORT=8080
            
            docker version >/dev/null
            
            docker pull "$IMAGE"
            docker rm -f "$NAME" || true
            docker run -d --name "$NAME" --restart unless-stopped -p "$PORT":8080 "$IMAGE"
            
            for i in {1..20}; do
              if curl -fsS "http://localhost:$PORT/actuator/health" >/dev/null; then
                echo "healthy"; exit 0
              fi
              sleep 2
            done
            echo "health check failed"; exit 1
